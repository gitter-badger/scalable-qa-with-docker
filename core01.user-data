#cloud-config

---
coreos:
  etcd2:
    discovery: https://discovery.etcd.io/5320a3e4797da067bc41c7541c34a80f
    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380
  fleet:
    public-ip: $public_ipv4
  units:
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start
  - name: update-engine.service
    command: stop
    mask: true
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: gitbucket.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=Docker GitBucket, a github clone
      After=docker.service
      Requires=docker.service
      Requires=gitbucket.mount

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull hiono/gitbucket
      ExecStartPre=-/usr/bin/docker kill git-gitbucket
      ExecStartPre=-/usr/bin/docker rm git-gitbucket
      ExecStart=/usr/bin/docker run \
                     -v /gitbucket:/var/gitbucket \
                     -p 29418:29418 \
                     -p 8080:8080 \
                     --name="git-gitbucket" \
                     hiono/gitbucket
      ExecStop=/usr/bin/docker stop git-gitbucket
  - name: jenkins.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Jenkins
      After=docker.service
      Requires=docker.service
      Requires=jenkins.mount

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull mjvdende/jenkins-protractor-chrome
      ExecStartPre=-/usr/bin/docker kill ci-jenkins
      ExecStartPre=-/usr/bin/docker rm ci-jenkins
      ExecStart=/usr/bin/docker run \
                       -p 8181:8080 \
                       -p 50000:50000 \
                       -v /jenkins:/var/jenkins_home \
                       --name="ci-jenkins" \
                       mjvdende/jenkins-protractor-chrome
      ExecStop=/usr/bin/docker stop ci-jenkins
  - name: petclinic.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=petclinic
      After=docker.service jenkins.service
      Requires=docker.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull xebia/petclinic
      ExecStartPre=-/usr/bin/docker kill petclinic
      ExecStartPre=-/usr/bin/docker rm petclinic
      ExecStart=/usr/bin/docker run \
                       -p 8282:8080 \
                       --name="petclinic" \
                       xebia/petclinic
      ExecStop=/usr/bin/docker stop petclinic
  - name: zookeeper.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=zookeeper
      After=docker.service
      Requires=docker.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull garland/zookeeper
      ExecStartPre=-/usr/bin/docker kill zookeeper
      ExecStartPre=-/usr/bin/docker rm zookeeper
      ExecStart=/usr/bin/docker run \
                        -p 2181:2181 \
                        -p 2888:2888 \
                        -p 3888:3888 \
                        --name="zookeeper" \
                        garland/zookeeper
      ExecStop=/usr/bin/docker stop zookeeper
  - name: mesos-master.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=mesos master
      After=docker.service
      Requires=docker.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull garland/mesosphere-docker-mesos-master
      ExecStartPre=-/usr/bin/docker kill mesos-master
      ExecStartPre=-/usr/bin/docker rm mesos-master
      ExecStart=/usr/bin/docker run --net="host" \
                        -p 5050:5050 \
                        -e "MESOS_HOSTNAME=172.17.8.101" \
                        -e "MESOS_IP=172.17.8.101" \
                        -e "MESOS_ZK=zk://172.17.8.101:2181/mesos" \
                        -e "MESOS_PORT=5050" \
                        -e "MESOS_LOG_DIR=/var/log/mesos" \
                        -e "MESOS_QUORUM=1" \
                        -e "MESOS_REGISTRY=in_memory" \
                        -e "MESOS_WORK_DIR=/var/lib/mesos" \
                        --name="mesos-master" \
                        garland/mesosphere-docker-mesos-master
      ExecStop=/usr/bin/docker stop mesos-master
  - name: mesos-slave.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=mesos slave
      After=docker.service
      Requires=docker.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull garland/mesosphere-docker-mesos-master
      ExecStartPre=-/usr/bin/docker kill mesos-slave
      ExecStartPre=-/usr/bin/docker rm mesos-slave
      ExecStart=/usr/bin/docker run \
          --entrypoint=mesos-slave \
          --privileged=true \
          --net=host \
          -p 5051:5051 \
          -e "MESOS_WORK_DIR=/tmp/mesos" \
          -e "MESOS_LOG_DIR=/var/log/mesos" \
          -e "MESOS_MASTER=zk://172.17.8.101:2181/mesos" \
          -e "MESOS_ISOLATOR=cgroups/cpu,cgroups/mem" \
          -e "MESOS_CONTAINERIZERS=docker,mesos" \
          -e "MESOS_EXECUTOR_REGISTRATION_TIMEOUT:5mins" \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /usr/bin/docker:/usr/bin/docker \
          -v /sys:/sys \
          -v /cgroup:/cgroup \
          -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
          --name="mesos-slave" \
          garland/mesosphere-docker-mesos-master
      ExecStop=/usr/bin/docker stop mesos-slave
  - name: selenium-hub.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=Selenium Hub 2.47.1
      After=docker.service
      Requires=docker.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull selenium/hub:2.47.1
      ExecStartPre=-/usr/bin/docker kill selenium-hub
      ExecStartPre=-/usr/bin/docker rm selenium-hub
      ExecStart=/usr/bin/docker run \
                       -p 4444:4444 \
                       --name="selenium-hub" \
                       selenium/hub:2.47.1
      ExecStop=/usr/bin/docker stop selenium-hub
  - name: node-chrome.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=Selenium Node Chrome 2.47.1
      After=docker.service selenium-hub.service
      Requires=docker.service selenium-hub.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull selenium/node-chrome:2.47.1
      ExecStartPre=-/usr/bin/docker kill node-chrome
      ExecStartPre=-/usr/bin/docker rm node-chrome
      ExecStart=/usr/bin/docker run \
                       --link selenium-hub:hub \
                       --name="node-chrome" \
                       selenium/node-chrome:2.47.1
      ExecStop=/usr/bin/docker stop node-chrome
  - name: node-firefox.service
    command: stop
    enable: true
    content: |
      [Unit]
      Description=Selenium Node Firefox 2.47.1
      After=docker.service selenium-hub.service
      Requires=docker.service selenium-hub.service

      [Service]
      Restart=always
      RestartSec=5
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker pull selenium/node-firefox:2.47.1
      ExecStartPre=-/usr/bin/docker kill node-firefox
      ExecStartPre=-/usr/bin/docker rm node-firefox
      ExecStart=/usr/bin/docker run \
                       --link selenium-hub:hub \
                       --name="node-firefox" \
                       selenium/node-firefox:2.47.1
      ExecStop=/usr/bin/docker stop node-firefox
